{"version":3,"file":"static/js/485.4ec52be1.chunk.js","mappings":"0OAEaA,EAAYC,EAAAA,GAAAA,IAAH,yKASTC,EAAUD,EAAAA,GAAAA,IAAH,4GAOPE,EAAQF,EAAAA,GAAAA,GAAH,qIAGD,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,WAAWC,IAAvB,I,6CC2BlB,EAxCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,GAAUC,EAAAA,EAAAA,cAAY,YAC1BC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GACvBP,EAAUO,EAAUC,SACpBN,GAAW,EACZ,GACF,GAAE,IAEH,GAAwCO,EAAAA,EAAAA,GAASN,GAAjD,eAAOO,EAAP,KAAkBC,EAAlB,KAA6BC,EAA7B,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRH,GACD,GAAE,CAACA,IAEAC,GAAaV,GACR,SAACa,EAAA,EAAD,IAELF,GACK,mCAGc,KAAb,OAANb,QAAM,IAANA,OAAA,EAAAA,EAAQgB,SACH,SAACC,EAAAA,SAAD,CAAUC,KAAK,mBAItB,UAAC3B,EAAD,YACE,SAACG,EAAD,8BACA,SAACD,EAAD,iBACGO,QADH,IACGA,OADH,EACGA,EAAQmB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACX,SAACC,EAAA,EAAD,CAAoBH,MAAOA,EAAOC,GAAIA,EAAIG,IAAKF,GAA/BD,EADL,QAMpB,C","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px 40px;\n`;\nexport const Gallery = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 26px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 38px;\n  line-height: 1.6;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { Container, Title, Gallery } from './Home.styled';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { useFetch } from 'hooks/useFetch';\nimport { NotFound } from 'components/NotFound/NotFound';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getData = useCallback(() => {\n    getTrendingMovies().then(resMovies => {\n      setMovies(resMovies.results);\n      setLoading(false);\n    });\n  }, []);\n\n  const [fetchData, isLoading, isError] = useFetch(getData);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  if (isLoading || loading) {\n    return <Loader />;\n  }\n  if (isError) {\n    return <div>Error</div>;\n  }\n\n  if (movies?.length === 0) {\n    return <NotFound text=\"Nothing found\" />;\n  }\n\n  return (\n    <Container>\n      <Title>Trending today</Title>\n      <Gallery>\n        {movies?.map(({ title, id, poster_path }) => (\n          <MovieCard key={id} title={title} id={id} url={poster_path} />\n        ))}\n      </Gallery>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["Container","styled","Gallery","Title","p","theme","fontWeight","bold","useState","movies","setMovies","loading","setLoading","getData","useCallback","getTrendingMovies","then","resMovies","results","useFetch","fetchData","isLoading","isError","useEffect","Loader","length","NotFound","text","map","title","id","poster_path","MovieCard","url"],"sourceRoot":""}