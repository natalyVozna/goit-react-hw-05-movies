{"version":3,"file":"static/js/154.fd4c741c.chunk.js","mappings":"iNAGaA,EAAYC,EAAAA,GAAAA,IAAH,0YASH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEY,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,OAAOC,cAAvB,IAQxBC,EAAQP,EAAAA,GAAAA,IAAH,qJAMC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPK,GAAUR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,0JAQPU,EAAQV,EAAAA,GAAAA,EAAH,wGACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,SAASC,CAArB,IACC,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,WAAWC,IAAvB,I,2BCXlB,EAzBkB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,IACxBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACpB,EAAD,YAEE,SAACS,EAAD,CAASY,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMJ,GAA7C,UACE,SAACX,EAAD,CACEgB,IACU,OAARN,EAAA,8CAC2CA,GACvCO,EAENC,IAAKV,OAGT,SAACL,EAAD,UAAQK,MAGb,C,8FCrBYhB,EAAYC,EAAAA,GAAAA,IAAH,yKAUTU,EAAQV,EAAAA,GAAAA,EAAH,0JAGD,SAAAC,GAAC,OAAIA,EAAEC,MAAMW,WAAWC,IAAvB,IACP,SAAAb,GAAC,OAAIA,EAAEC,MAAMG,OAAOqB,GAAnB,I,SCfCC,EAAW,SAAC,GAA4B,IAAD,IAAzBC,KAAAA,OAAyB,MAAlB,YAAkB,EAClD,OACE,SAAC7B,EAAD,WACE,SAACW,EAAD,UAAQkB,KAGb,C,uGCLYC,EAAW,SAAAC,GACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAYC,EAAAA,EAAAA,aAAW,mCAC3B,WAAMC,GAAN,iFAEIH,GAAa,GAFjB,SAGUL,EAASQ,GAHnB,sDAKIL,GAAW,GALf,uBAOIE,GAAa,GAPjB,0EAD2B,sDAW3B,CAACL,IAGH,MAAO,CAACM,EAAWF,EAAWF,EAC/B,C,+LCnBKO,EAAM,mCACNC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTJ,OAAQ,CACNK,KAAM,KAIGC,EAAiB,mCAAG,6GAAOC,EAAP,+BAAc,QAASC,EAAvB,+BAA8B,MAA9B,SACRN,EAASO,IAAT,mBACTF,EADS,YACDC,EADC,oBACeP,IAFP,uBACvBS,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAOjBC,EAAqB,mCAAG,WAAMC,GAAN,yFACZV,EAASO,IAAT,gBAAsBG,EAAtB,oBAA0CX,IAD9B,uBAC3BS,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAIrBG,EAAe,mCAAG,WAAMb,GAAN,yFACNE,EAASO,IAAT,+BAAqCR,GAAO,CACjED,OAAAA,IAF2B,uBACrBU,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDAOfI,EAAS,mCAAG,WAAMF,GAAN,yFACAV,EAASO,IAAT,gBACZG,EADY,4BACgBX,IAFhB,uBACfS,EADe,EACfA,KADe,kBAKhBA,GALgB,2CAAH,sDAOTK,EAAU,mCAAG,WAAMH,GAAN,yFACDV,EAASO,IAAT,gBACZG,EADY,4BACgBX,IAFf,uBAChBS,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,qD","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","hooks/useFetch.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: calc((100% - 130px) / 6);\n  justify-content: flex-start;\n  height: auto;\n  border: 1px solid rgb(0 0 0 / 10%);\n  box-shadow: 0 2px 8px rgb(0 0 0 / 10%);\n\n  border-radius: ${p => p.theme.space[2]}px;\n\n  transition: transform 250ms ${props => props.theme.colors.timingFunction};\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Cover = styled.img`\n  display: block;\n  width: 100%;\n  height: 225px;\n  object-fit: cover;\n  object-position: top;\n  border-radius: ${p => p.theme.space[2]}px;\n`;\n\nexport const NavItem = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  line-height: 1;\n  text-decoration: none;\n`;\nexport const Title = styled.p`\n  font-size: ${p => p.theme.fontSize.m}px;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  padding: 8px;\n  min-height: 70px;\n`;\n","import { Container, NavItem, Cover, Title } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\nimport defaultImg from '../../images/defaultImg.jpeg';\nimport { useLocation } from 'react-router-dom';\n\nconst MovieCard = ({ title, id, url }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {/* <NavItem to={`/movies/${id}`} state={state.from}> */}\n      <NavItem to={`/movies/${id}`} state={{ from: location }}>\n        <Cover\n          src={\n            url !== null\n              ? `https://image.tmdb.org/t/p/original/${url}`\n              : defaultImg\n          }\n          alt={title}\n        />\n      </NavItem>\n      <Title>{title}</Title>\n    </Container>\n  );\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  url: PropTypes.string,\n};\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  padding: 20px 40px;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  line-height: 1.6;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  color: ${p => p.theme.colors.red};\n  margin-bottom: 20px;\n  /* text-align: center; */\n`;\n","import { Container, Title } from './NotFound.styled';\nexport const NotFound = ({ text = 'Not found' }) => {\n  return (\n    <Container>\n      <Title>{text}</Title>\n    </Container>\n  );\n};\n","import { useCallback, useState } from 'react';\n\nexport const useFetch = callback => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useCallback(\n    async params => {\n      try {\n        setIsLoading(true);\n        await callback(params);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [callback]\n  );\n\n  return [fetchData, isLoading, isError];\n};\n","import axios from 'axios';\n\nconst key = 'e9cee7be5a008a68e4280761266315f1';\nconst fetchApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    page: 1,\n  },\n});\n\nexport const getTrendingMovies = async (type = 'movie', time = 'day') => {\n  const { data } = await fetchApi.get(\n    `trending/${type}/${time}?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getFullInfoAboutMovie = async movie_id => {\n  const { data } = await fetchApi.get(`movie/${movie_id}?api_key=${key}`);\n  return data;\n};\nexport const getMovieByQuery = async params => {\n  const { data } = await fetchApi.get(`search/movie?api_key=${key}`, {\n    params,\n  });\n\n  return data;\n};\nexport const getActors = async movie_id => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/credits?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/reviews?api_key=${key}`\n  );\n\n  return data;\n};\n"],"names":["Container","styled","p","theme","space","props","colors","timingFunction","Cover","NavItem","Link","Title","fontSize","m","fontWeight","bold","title","id","url","location","useLocation","to","state","from","src","defaultImg","alt","red","NotFound","text","useFetch","callback","useState","isError","setIsError","isLoading","setIsLoading","fetchData","useCallback","params","key","fetchApi","axios","baseURL","page","getTrendingMovies","type","time","get","data","getFullInfoAboutMovie","movie_id","getMovieByQuery","getActors","getReviews"],"sourceRoot":""}