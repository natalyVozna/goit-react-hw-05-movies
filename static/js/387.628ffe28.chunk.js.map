{"version":3,"file":"static/js/387.628ffe28.chunk.js","mappings":"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","sources":["components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","hooks/useFetch.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  padding: 20px 40px;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  line-height: 1.6;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  color: ${p => p.theme.colors.red};\n  margin-bottom: 20px;\n  /* text-align: center; */\n`;\n","import { Container, Title } from './NotFound.styled';\nexport const NotFound = ({ text = 'Not found' }) => {\n  return (\n    <Container>\n      <Title>{text}</Title>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 40px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 16px;\n  line-height: 1.4;\n  margin-bottom: 20px;\n`;\n\nexport const Author = styled.span`\n  font-size: 22px;\n  line-height: 1.6;\n  font-weight: ${p => p.theme.fontWeight.bold};\n`;\nexport const Text = styled.p`\n  font-size: 16px;\n  line-height: 1.4;\n  padding-left: 10px;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { NotFound } from 'components/NotFound/NotFound';\nimport { useFetch } from 'hooks/useFetch';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\nimport { Container, Item, Author, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getData = useCallback(params => {\n    getReviews(params).then(res => {\n      setReviews(res.results);\n      setLoading(false);\n    });\n  }, []);\n\n  const [fetchData, isLoading, isError] = useFetch(getData);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchData(movieId);\n  }, [fetchData, movieId]);\n\n  if (isLoading || loading) {\n    return <Loader />;\n  }\n  if (isError) {\n    return <div>Error</div>;\n  }\n\n  if (reviews.length === 0 && !loading) {\n    const text = \"We don't have any reviews\";\n    return <NotFound text={text} />;\n  }\n\n  return (\n    <Container>\n      {reviews.map(({ content, author, id }) => (\n        <Item key={id}>\n          <Author>&#10003; Autor: {author}</Author>\n          <Text>{content}</Text>\n        </Item>\n      ))}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import { useCallback, useState } from 'react';\n\nexport const useFetch = callback => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useCallback(\n    async params => {\n      try {\n        setIsLoading(true);\n        await callback(params);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [callback]\n  );\n\n  return [fetchData, isLoading, isError];\n};\n","import axios from 'axios';\n\nconst key = 'e9cee7be5a008a68e4280761266315f1';\nconst fetchApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    page: 1,\n  },\n});\n\nexport const getTrendingMovies = async (type = 'movie', time = 'day') => {\n  const { data } = await fetchApi.get(\n    `trending/${type}/${time}?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getFullInfoAboutMovie = async movie_id => {\n  const { data } = await fetchApi.get(`movie/${movie_id}?api_key=${key}`);\n  return data;\n};\nexport const getMovieByQuery = async params => {\n  const { data } = await fetchApi.get(`search/movie?api_key=${key}`, {\n    params,\n  });\n\n  return data;\n};\nexport const getActors = async movie_id => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/credits?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/reviews?api_key=${key}`\n  );\n\n  return data;\n};\n"],"names":["Container","styled","Title","p","theme","fontWeight","bold","colors","red","NotFound","text","Item","Author","Text","movieId","useParams","useState","reviews","setReviews","loading","setLoading","getData","useCallback","params","getReviews","then","res","results","useFetch","fetchData","isLoading","isError","useEffect","Loader","length","map","content","author","id","callback","setIsError","setIsLoading","key","fetchApi","axios","baseURL","page","getTrendingMovies","type","time","get","data","getFullInfoAboutMovie","movie_id","getMovieByQuery","getActors"],"sourceRoot":""}