{"version":3,"file":"static/js/306.1012ae46.chunk.js","mappings":"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","sources":["components/CastCard/CastCard.styled.jsx","components/CastCard/CastCard.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","hooks/useFetch.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: calc((100% - 130px) / 6);\n  justify-content: flex-start;\n  height: auto;\n  border: 1px solid rgb(0 0 0 / 10%);\n  box-shadow: 0 2px 8px rgb(0 0 0 / 10%);\n\n  border-radius: ${p => p.theme.space[2]}px;\n  transition: transform 250ms ${props => props.theme.colors.timingFunction};\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Cover = styled.img`\n  display: block;\n  width: 100%;\n  height: 225px;\n  object-fit: cover;\n  border-radius: ${p => p.theme.space[2]}px;\n`;\n\nexport const NavItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  line-height: 1;\n  text-decoration: none;\n`;\nexport const Text = styled.p`\n  font-size: ${p => p.theme.fontSize.s}px;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  padding: 8px;\n`;\n","import { Container, Cover, Text, NavItem } from './CastCard.styled';\nimport PropTypes from 'prop-types';\nimport defaultImg from '../../images/defaultImg.jpeg';\n\nexport const CastCard = ({ url, name, character, popularity }) => {\n  return (\n    <Container>\n      <NavItem>\n        <Cover\n          src={\n            url !== null\n              ? `https://image.tmdb.org/t/p/original/${url}`\n              : defaultImg\n          }\n          alt={name}\n        />\n      </NavItem>\n      <Text>{name}</Text>\n      <Text>{character}</Text>\n      <Text>Popularity: {Math.round(popularity)}%</Text>\n    </Container>\n  );\n};\n\nCastCard.propTypes = {\n  url: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n  popularity: PropTypes.number,\n};\n","import styled from 'styled-components';\n\nexport const Gallery = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 26px;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 10px 40px 40px;\n`;\n","import { CastCard } from 'components/CastCard/CastCard';\nimport { NotFound } from 'components/NotFound/NotFound';\nimport { useFetch } from 'hooks/useFetch';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getActors } from 'services/api';\nimport { Gallery } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  const getData = useCallback(params => {\n    getActors(params).then(res => {\n      setActors(res.cast);\n    });\n  }, []);\n\n  const [fetchData, isLoading, isError] = useFetch(getData);\n\n  useEffect(() => {\n    fetchData(movieId);\n  }, [fetchData, movieId]);\n\n  if (isLoading) {\n    return <div>Loading</div>;\n  }\n  if (isError) {\n    return <div>Error</div>;\n  }\n\n  if (!actors && !isLoading) {\n    const text = \"We don't have any actors\";\n    return <NotFound text={text} />;\n  }\n\n  return (\n    <Gallery>\n      {actors.map(({ profile_path, name, character, popularity, id }) => (\n        <CastCard\n          key={id}\n          url={profile_path}\n          name={name}\n          character={character}\n          popularity={popularity}\n        />\n      ))}\n    </Gallery>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  padding: 20px 40px;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  line-height: 1.6;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  color: ${p => p.theme.colors.red};\n  margin-bottom: 20px;\n  /* text-align: center; */\n`;\n","import { Container, Title } from './NotFound.styled';\nexport const NotFound = ({ text = 'Not found' }) => {\n  return (\n    <Container>\n      <Title>{text}</Title>\n    </Container>\n  );\n};\n","import { useCallback, useState } from 'react';\n\nexport const useFetch = callback => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useCallback(\n    async params => {\n      try {\n        setIsLoading(true);\n        await callback(params);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [callback]\n  );\n\n  return [fetchData, isLoading, isError];\n};\n","import axios from 'axios';\n\nconst key = 'e9cee7be5a008a68e4280761266315f1';\nconst fetchApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    page: 1,\n  },\n});\n\nexport const getTrendingMovies = async (type = 'movie', time = 'day') => {\n  const { data } = await fetchApi.get(\n    `trending/${type}/${time}?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getFullInfoAboutMovie = async movie_id => {\n  const { data } = await fetchApi.get(`movie/${movie_id}?api_key=${key}`);\n  return data;\n};\nexport const getMovieByQuery = async params => {\n  const { data } = await fetchApi.get(`search/movie?api_key=${key}`, {\n    params,\n  });\n\n  return data;\n};\nexport const getActors = async movie_id => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/credits?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/reviews?api_key=${key}`\n  );\n\n  return data;\n};\n"],"names":["Container","styled","p","theme","space","props","colors","timingFunction","Cover","NavItem","Text","fontSize","s","fontWeight","bold","CastCard","url","name","character","popularity","src","defaultImg","alt","Math","round","Gallery","movieId","useParams","useState","actors","setActors","getData","useCallback","params","getActors","then","res","cast","useFetch","fetchData","isLoading","isError","useEffect","NotFound","text","map","profile_path","id","Title","red","callback","setIsError","setIsLoading","key","fetchApi","axios","baseURL","page","getTrendingMovies","type","time","get","data","getFullInfoAboutMovie","movie_id","getMovieByQuery","getReviews"],"sourceRoot":""}