{"version":3,"file":"static/js/257.ada9dcc1.chunk.js","mappings":"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","sources":["components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","hooks/useFetch.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  padding: 20px 40px;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  line-height: 1.6;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  color: ${p => p.theme.colors.red};\n  margin-bottom: 20px;\n  /* text-align: center; */\n`;\n","import { Container, Title } from './NotFound.styled';\nexport const NotFound = ({ text = 'Not found' }) => {\n  return (\n    <Container>\n      <Title>{text}</Title>\n    </Container>\n  );\n};\n","import { useCallback, useState } from 'react';\n\nexport const useFetch = callback => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useCallback(\n    async params => {\n      try {\n        setIsLoading(true);\n        await callback(params);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [callback]\n  );\n\n  return [fetchData, isLoading, isError];\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const SectionInfo = styled.section`\n  position: relative;\n  display: flex;\n  padding: 20px 40px;\n  align-items: center;\n  background-image: linear-gradient(\n      to right,\n      rgba(47, 48, 58, 0.4),\n      rgba(47, 48, 58, 0.4)\n    ),\n    url(${p => p.url});\n  background-size: cover;\n  background-repeat: no-repeat;\n  min-height: 400px;\n  color: ${p => p.theme.colors.white};\n`;\nexport const GoBack = styled(NavLink)`\n  color: ${p => p.theme.colors.white};\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 10px;\n  left: 40px;\n  font-size: 18px;\n  text-decoration: none;\n\n  &:hover {\n    cursor: pointer;\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const Cover = styled.div`\n  color: ${p => p.theme.colors.white};\n  background-color: transparent;\n  border: none;\n  height: 500px;\n  display: flex;\n  align-items: center;\n`;\nexport const Img = styled.img`\n  display: block;\n  min-width: 300px;\n  height: auto;\n  border-width: 0px;\n  outline: none;\n  border-radius: 5px;\n`;\n\nexport const InfoBox = styled.div`\n  color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.space[5]}px;\n  font-size: ${p => p.theme.fontSize.m}px;\n  font-weight: ${p => p.theme.fontWeight.normal};\n  line-height: 1.6;\n`;\n\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSize.l}px;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  margin-bottom: 15px;\n`;\nexport const SubTitle = styled.h2`\n  margin-bottom: 10px;\n`;\nexport const Text = styled.p`\n  margin-bottom: 20px;\n`;\nexport const AdditionalSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  color: ${p => p.theme.colors.text};\n  padding: 20px 40px;\n`;\n\nexport const LinkBox = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const NavItem = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.space[2]}px;\n  font-size: 20px;\n  line-height: 1;\n  text-decoration: none;\n\n  &.active {\n    color: ${p => p.theme.colors.red};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  NavItem,\n  SectionInfo,\n  GoBack,\n  Img,\n  Container,\n  Cover,\n  InfoBox,\n  Title,\n  SubTitle,\n  Text,\n  AdditionalSection,\n  LinkBox,\n} from './MovieDetails.styled';\nimport { Suspense, useCallback, useEffect, useState } from 'react';\nimport { getFullInfoAboutMovie } from 'services/api';\nimport { useFetch } from 'hooks/useFetch';\nimport { Loader } from 'components/Loader/Loader';\nimport { NotFound } from 'components/NotFound/NotFound';\n\nconst navItems = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n\n  const getData = useCallback(params => {\n    getFullInfoAboutMovie(params).then(\n      ({\n        title,\n        id,\n        poster_path: url,\n        vote_average,\n        overview,\n        genres,\n        backdrop_path,\n      }) => {\n        const score = Math.round(vote_average * 10);\n        const allGenres = genres.map(genre => genre.name).join(' ');\n        setMovie({\n          title,\n          id,\n          url,\n          score,\n          allGenres,\n          overview,\n          backdropUrl: backdrop_path,\n        });\n        setLoading(false);\n      }\n    );\n  }, []);\n\n  const [fetchData, isLoading, isError] = useFetch(getData);\n\n  useEffect(() => {\n    fetchData(movieId);\n  }, [fetchData, movieId]);\n\n  if (isLoading || loading) {\n    return <Loader />;\n  }\n  if (isError) {\n    return <div>Error</div>;\n  }\n\n  if (!movie && !loading) {\n    const text = 'No match';\n    return <NotFound text={text} />;\n  }\n\n  return (\n    <Container>\n      <>\n        <SectionInfo\n          url={`https://image.tmdb.org/t/p/original/${movie.backdropUrl}`}\n        >\n          <GoBack to={location?.state ? location.state.from : '/'}>\n            &#8592; Go back\n          </GoBack>\n          <Cover>\n            <Img\n              src={`https://image.tmdb.org/t/p/original/${movie.url}`}\n              alt={movie.title}\n              width=\"200\"\n            />\n          </Cover>\n          <InfoBox>\n            <Title>{movie.title}</Title>\n            <Text>\n              <b>User Score:</b> {movie.score}%\n            </Text>\n            <SubTitle className=\"overview\">Overview</SubTitle>\n            <Text>{movie.overview}</Text>\n            <SubTitle className=\"genres\">Genres</SubTitle>\n            <p>{movie.allGenres}</p>\n          </InfoBox>\n        </SectionInfo>\n        <AdditionalSection className=\"additional\">\n          <Title>Additional information</Title>\n\n          <LinkBox>\n            {navItems.map(({ href, text }) => (\n              <NavItem to={href} key={href} state={location.state}>\n                &#10139; &nbsp;<span>{text}</span>\n              </NavItem>\n            ))}\n          </LinkBox>\n        </AdditionalSection>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst key = 'e9cee7be5a008a68e4280761266315f1';\nconst fetchApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    page: 1,\n  },\n});\n\nexport const getTrendingMovies = async (type = 'movie', time = 'day') => {\n  const { data } = await fetchApi.get(\n    `trending/${type}/${time}?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getFullInfoAboutMovie = async movie_id => {\n  const { data } = await fetchApi.get(`movie/${movie_id}?api_key=${key}`);\n  return data;\n};\nexport const getMovieByQuery = async params => {\n  const { data } = await fetchApi.get(`search/movie?api_key=${key}`, {\n    params,\n  });\n\n  return data;\n};\nexport const getActors = async movie_id => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/credits?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/reviews?api_key=${key}`\n  );\n\n  return data;\n};\n"],"names":["Container","styled","Title","p","theme","fontWeight","bold","colors","red","NotFound","text","useFetch","callback","useState","isError","setIsError","isLoading","setIsLoading","fetchData","useCallback","params","SectionInfo","url","white","GoBack","NavLink","accent","Cover","Img","InfoBox","space","fontSize","m","normal","l","SubTitle","Text","AdditionalSection","LinkBox","NavItem","navItems","href","movieId","useParams","movie","setMovie","loading","setLoading","location","useLocation","getData","getFullInfoAboutMovie","then","title","id","poster_path","vote_average","overview","genres","backdrop_path","score","Math","round","allGenres","map","genre","name","join","backdropUrl","useEffect","Loader","to","state","from","src","alt","width","className","Suspense","fallback","key","fetchApi","axios","baseURL","page","getTrendingMovies","type","time","get","data","movie_id","getMovieByQuery","getActors","getReviews"],"sourceRoot":""}